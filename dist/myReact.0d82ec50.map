{"version":3,"sources":["index.js"],"names":["createElement","tag","attrs","children","render","vnode","container","React","element","console","log","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,KAA5B,EAAgD;AAAA,sCAAVC,QAAU;AAAVA,gBAAU;AAAA;;AAC5C,WAAO;AACHF,gBADG;AAEHC,oBAFG;AAGHC;AAHG,KAAP;AAKH;AACD,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,SAAvB,EAAkC,CAEjC;AACD,IAAMC,QAAQ;AACVP;AADU,CAAd;AAGA,IAAMQ,UACF;AAAA;AAAA,MAAK,SAAM,KAAX;AAAA;AACS;AAAA;AAAA;AAAA;AAAA;AADT,CADJ;AAKAC,QAAQC,GAAR,CAAYF,OAAZ;;AAEA,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AACrC,QAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,eAAe,IAAvD,EAA6D;AACzD,cAAM,IAAIC,SAAJ,CAAc,qEAAoED,UAApE,yCAAoEA,UAApE,EAAd,CAAN;AACH;AACDD,aAASG,SAAT,GAAqBC,OAAOC,MAAP,CAAcJ,cAAcA,WAAWE,SAAvC,EACjB,EAAEG,aAAa,EAAEC,OAAOP,QAAT,EAAmBQ,YAAY,KAA/B,EAAsCC,UAAU,IAAhD,EAAsDC,cAAc,IAApE,EAAf,EADiB,CAArB;AAEA,QAAIT,UAAJ,EAAgBG,OAAOO,cAAP,GAAwBP,OAAOO,cAAP,CAAsBX,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,SAASY,SAAT,GAAqBX,UAA3F;AACnB","file":"myReact.0d82ec50.map","sourcesContent":["'use strict';\r\n\r\nfunction createElement(tag, attrs, ...children) {\r\n    return {\r\n        tag,\r\n        attrs,\r\n        children\r\n    }\r\n};\r\nfunction render(vnode, container) {\r\n\r\n}\r\nconst React = {\r\n    createElement\r\n}\r\nconst element = (\r\n    <div class='add'>\r\n        hello<span>world!</span>\r\n    </div>\r\n);\r\nconsole.log(element);\r\n\r\nfunction _inherits(subClass, superClass) { \r\n    if (typeof superClass !== \"function\" && superClass !== null) { \r\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); \r\n    }; \r\n    subClass.prototype = Object.create(superClass && superClass.prototype, \r\n        { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); \r\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; \r\n}\r\n"]}